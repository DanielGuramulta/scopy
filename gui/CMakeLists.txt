cmake_minimum_required(VERSION 3.9.6)

project(gui LANGUAGES CXX)

set(CMAKE_AUTOUIC ON)

# As the include/src files are split this does not work we will need to manually
# wrap cpp files
set(CMAKE_AUTOMOC ON)
set(CMAKE_AUTORCC ON)

find_package(QT NAMES Qt6 Qt5 COMPONENTS Widgets Test Concurrent REQUIRED)
find_package(Qt${QT_VERSION_MAJOR} COMPONENTS Widgets Test Concurrent REQUIRED)

# Find libiio and link it to the targets generated by this project
find_library(IIO_LIBRARIES NAMES iio libiio)
find_path(IIO_INCLUDE_DIRS iio.h)

# add qwt, the findQwt script will create the qwt::qwt target containing all
# that is needed for qwt and qwtpolar
include(cmake/findQwt.cmake)

add_library(
    gui SHARED
    # source files
    src/two_buttons_widget.cpp
    src/run_single_widget.cpp
    src/dynamic_widget.cpp
    src/subsection_separator.cpp
    src/settings_pair_widget.cpp
    src/custom_push_button.cpp
    src/spinbox_a.cpp
    src/completion_circle.cpp
    src/prefix_formatter.cpp
    src/custom_menu_button.cpp
    src/homepage_controls.cpp
    src/connect_dialog.cpp
    src/linked_button.cpp
    src/small_on_off_switch.cpp
    src/custom_animation.cpp
    src/animation_manager.cpp
    src/channel_widget.cpp
    # ui files
    ui/two_buttons_widget.ui
    ui/run_single_widget.ui
    ui/subsection_separator.ui
    ui/settings_pair_widget.ui
    ui/spinbox_a.ui
    ui/custom_menu_button.ui
    ui/homepage_controls.ui
    ui/connect_dialog.ui
    ui/channel_widget.ui
    # resources
    resources/resources.qrc
)

# MOC hack in order to have the header files in include/scopy/gui
file(GLOB_RECURSE HEADERS_TO_MOC
     ${CMAKE_CURRENT_SOURCE_DIR}/include/scopy/gui/*.hpp
)
qt5_wrap_cpp(
    gui_moc
    ${HEADERS_TO_MOC}
    TARGET
    gui
    OPTIONS
    --no-notes
)
target_sources(gui PRIVATE ${gui_moc})
# end MOC hack

set_target_properties(
    gui PROPERTIES AUTOUIC_SEARCH_PATHS ${CMAKE_CURRENT_SOURCE_DIR}/ui
)

target_include_directories(
    gui
    PUBLIC $<INSTALL_INTERFACE:include>
           $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
           ${IIO_INCLUDE_DIRS}
    PRIVATE ${CMAKE_CURRENT_SOURCE_DIR}/src
)

target_link_libraries(
    gui
    PRIVATE scopy::core
            Qt${QT_VERSION_MAJOR}::Widgets
            Qt${QT_VERSION_MAJOR}::Concurrent
            project_options
            project_warnings
            qwt::qwt
    PUBLIC ${IIO_LIBRARIES}
)

add_library(scopy::gui ALIAS gui)

add_subdirectory(tests)
